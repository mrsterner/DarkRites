plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex '(dev|io\\.github)\\.onyxstudios.*'
			includeGroupByRegex 'dev\\.emi.*'
		}
	}
	maven {
		name = 'Nexus OSS Repository'
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	maven {
		url = 'https://maven.jamieswhiteshirt.com/libs-release/'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven {
		name = "Bewitchment"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "wood api"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "reach"
		url = "https://maven.jamieswhiteshirt.com/libs-release"
	}
	maven {
		name = "cardinal"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "cloth config"
		url = "https://maven.shedaniel.me/"
	}
	maven {
		name = "patchouli"
		url = "https://maven.blamejared.com"
	}
	maven {
		name = "Mod Menu"
		url =  "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = "Conditional Crafting"
		url = "https://ytg1234.github.io/maven"
	}

	maven {
		name = "dblsaiko"
		url = "https://maven.dblsaiko.net/"
	}
	maven {
		name = "Cotton"
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
		allowInsecureProtocol = true
	}
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}
	maven {
		name "appleskin"
		url "https://maven.ryanliptak.com/"
	}
	maven {
		name "impersonate"
		url "https://oss.sonatype.org/content/repositories/snapshots"
	}

	maven {
		name "GeckoLib"
		url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
	}

	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
	}
	maven {
		name = "jitpack"
		url = "https://jitpack.io"
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	modImplementation "io.github.ladysnake:requiem-api:${requiem_version}"
	//modRuntimeOnly "io.github.ladysnake:requiem-core:${requiem_version}"
	modRuntimeOnly "io.github.ladysnake:requiem:${requiem_version}"

	modRuntimeOnly "com.terraformersmc:modmenu:${mod_menu_version}"
	modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_api_version}"
	include "com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_api_version}"
	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}")
	include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}")

	modImplementation("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}")
	modImplementation("io.github.ladysnake:PlayerAbilityLib:${pal_version}")
	include("io.github.ladysnake:PlayerAbilityLib:${pal_version}")

	modImplementation("com.github.virtuoel:pehkui:${project.pehkui_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation("io.github.ladysnake:impersonate:${impersonate_version}")
	modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}")
	modImplementation("com.github.emilyalexandra:trinkets:${trinkets_version}")

	modImplementation("curse.maven:bewitchment-394915:${project.bewitchment_version}")
	modCompileOnly("squeek.appleskin:appleskin-fabric:${appleskin_version}:api") {
		transitive = false
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	filesMatching('LICENSE') {
		rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
